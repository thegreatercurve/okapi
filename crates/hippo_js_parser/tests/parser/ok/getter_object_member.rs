use crate::parser::assert_parser_eq;

#[test]
fn getter_object_member() {
    assert_parser_eq!(
        r#"let a = { 
    get foo() { return foo; }, 
    get bar() { return "bar"; }, 
    get ["a" + "b"]() { return "a" + "b"; }, 
    get 5() { return 5; }, 
    get() { return "This is a method and not a getter"; }, 
};"#,
        r#"{"type":"Program","start":0,"end":213,"body":[{"type":"VariableDeclaration","start":0,"end":213,"declarations":[{"type":"VariableDeclarator","start":4,"end":212,"id":{"type":"Identifier","start":4,"end":5,"name":"a"},"init":{"type":"ObjectExpression","start":8,"end":212,"properties":[{"type":"Property","start":15,"end":40,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":19,"end":22,"name":"foo"},"kind":"get","value":{"type":"FunctionExpression","start":22,"end":40,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":25,"end":40,"body":[{"type":"ReturnStatement","start":27,"end":38,"argument":{"type":"Identifier","start":34,"end":37,"name":"foo"}}]}}},{"type":"Property","start":47,"end":74,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":51,"end":54,"name":"bar"},"kind":"get","value":{"type":"FunctionExpression","start":54,"end":74,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":57,"end":74,"body":[{"type":"ReturnStatement","start":59,"end":72,"argument":{"type":"Literal","start":66,"end":71,"value":"bar","raw":"\"bar\""}}]}}},{"type":"Property","start":81,"end":120,"method":false,"shorthand":false,"computed":true,"key":{"type":"BinaryExpression","start":86,"end":95,"left":{"type":"Literal","start":86,"end":89,"value":"a","raw":"\"a\""},"operator":"+","right":{"type":"Literal","start":92,"end":95,"value":"b","raw":"\"b\""}},"kind":"get","value":{"type":"FunctionExpression","start":96,"end":120,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":99,"end":120,"body":[{"type":"ReturnStatement","start":101,"end":118,"argument":{"type":"BinaryExpression","start":108,"end":117,"left":{"type":"Literal","start":108,"end":111,"value":"a","raw":"\"a\""},"operator":"+","right":{"type":"Literal","start":114,"end":117,"value":"b","raw":"\"b\""}}}]}}},{"type":"Property","start":127,"end":148,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":131,"end":132,"value":5,"raw":"5"},"kind":"get","value":{"type":"FunctionExpression","start":132,"end":148,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":135,"end":148,"body":[{"type":"ReturnStatement","start":137,"end":146,"argument":{"type":"Literal","start":144,"end":145,"value":5,"raw":"5"}}]}}},{"type":"Property","start":155,"end":208,"method":true,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":155,"end":158,"name":"get"},"kind":"init","value":{"type":"FunctionExpression","start":158,"end":208,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":161,"end":208,"body":[{"type":"ReturnStatement","start":163,"end":206,"argument":{"type":"Literal","start":170,"end":205,"value":"This is a method and not a getter","raw":"\"This is a method and not a getter\""}}]}}}]}}],"kind":"let"}],"sourceType":"module"}"#
    );
}
