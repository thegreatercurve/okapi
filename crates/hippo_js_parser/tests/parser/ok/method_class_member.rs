use crate::parser::assert_parser_eq;

#[test]
fn method_class_member() {
    assert_parser_eq!(
        r#"class Test { 
    method() {} 
    async asyncMethod() {} 
    async *asyncGeneratorMethod() {} 
    *generatorMethod() {} 
    foo() {} 
    ["foo" + "bar"]() {} 
    *[Symbol.iterator]() {}
    5() {} 
    #private() {}
}"#,
        r#"{"type":"Program","start":0,"end":223,"body":[{"type":"ClassDeclaration","start":0,"end":223,"id":{"type":"Identifier","start":6,"end":10,"name":"Test"},"superClass":null,"body":{"type":"ClassBody","start":11,"end":223,"body":[{"type":"MethodDefinition","start":18,"end":29,"static":false,"computed":false,"key":{"type":"Identifier","start":18,"end":24,"name":"method"},"kind":"method","value":{"type":"FunctionExpression","start":24,"end":29,"id":null,"params":[],"generator":false,"expression":false,"async":false,"body":{"type":"BlockStatement","start":27,"end":29,"body":[]}}},{"type":"MethodDefinition","start":35,"end":57,"static":false,"computed":false,"key":{"type":"Identifier","start":41,"end":52,"name":"asyncMethod"},"kind":"method","value":{"type":"FunctionExpression","start":52,"end":57,"id":null,"params":[],"generator":false,"expression":false,"async":true,"body":{"type":"BlockStatement","start":55,"end":57,"body":[]}}},{"type":"MethodDefinition","start":63,"end":95,"static":false,"computed":false,"key":{"type":"Identifier","start":70,"end":90,"name":"asyncGeneratorMethod"},"kind":"method","value":{"type":"FunctionExpression","start":90,"end":95,"id":null,"params":[],"generator":true,"expression":false,"async":true,"body":{"type":"BlockStatement","start":93,"end":95,"body":[]}}},{"type":"MethodDefinition","start":101,"end":122,"static":false,"computed":false,"key":{"type":"Identifier","start":102,"end":117,"name":"generatorMethod"},"kind":"method","value":{"type":"FunctionExpression","start":117,"end":122,"id":null,"params":[],"generator":true,"expression":false,"async":false,"body":{"type":"BlockStatement","start":120,"end":122,"body":[]}}},{"type":"MethodDefinition","start":128,"end":136,"static":false,"computed":false,"key":{"type":"Identifier","start":128,"end":131,"name":"foo"},"kind":"method","value":{"type":"FunctionExpression","start":131,"end":136,"id":null,"params":[],"generator":false,"expression":false,"async":false,"body":{"type":"BlockStatement","start":134,"end":136,"body":[]}}},{"type":"MethodDefinition","start":142,"end":162,"static":false,"computed":true,"key":{"type":"BinaryExpression","start":143,"end":156,"left":{"type":"Literal","start":143,"end":148,"value":"foo","raw":"\"foo\""},"operator":"+","right":{"type":"Literal","start":151,"end":156,"value":"bar","raw":"\"bar\""}},"kind":"method","value":{"type":"FunctionExpression","start":157,"end":162,"id":null,"params":[],"generator":false,"expression":false,"async":false,"body":{"type":"BlockStatement","start":160,"end":162,"body":[]}}},{"type":"MethodDefinition","start":168,"end":191,"static":false,"computed":true,"key":{"type":"MemberExpression","start":170,"end":185,"object":{"type":"Identifier","start":170,"end":176,"name":"Symbol"},"property":{"type":"Identifier","start":177,"end":185,"name":"iterator"},"computed":false,"optional":false},"kind":"method","value":{"type":"FunctionExpression","start":186,"end":191,"id":null,"params":[],"generator":true,"expression":false,"async":false,"body":{"type":"BlockStatement","start":189,"end":191,"body":[]}}},{"type":"MethodDefinition","start":196,"end":202,"static":false,"computed":false,"key":{"type":"Literal","start":196,"end":197,"value":5,"raw":"5"},"kind":"method","value":{"type":"FunctionExpression","start":197,"end":202,"id":null,"params":[],"generator":false,"expression":false,"async":false,"body":{"type":"BlockStatement","start":200,"end":202,"body":[]}}},{"type":"MethodDefinition","start":208,"end":221,"static":false,"computed":false,"key":{"type":"PrivateIdentifier","start":208,"end":216,"name":"private"},"kind":"method","value":{"type":"FunctionExpression","start":216,"end":221,"id":null,"params":[],"generator":false,"expression":false,"async":false,"body":{"type":"BlockStatement","start":219,"end":221,"body":[]}}}]}}],"sourceType":"script"}"#
    );

    //     assert_parser_eq!(
    //         r#"class Static {
    //     static method() {}
    //     static async asyncMethod() {}
    //     static async *asyncGeneratorMethod() {}
    //     static *generatorMethod() {}
    //     static static() {}
    //     static async static() {}
    //     static async *static() {}
    //     static *static() {}
    // }"#,
    //         r#"{"type":"Program","start":0,"end":256,"body":[{"type":"ClassDeclaration","start":0,"end":256,"id":{"type":"Identifier","start":6,"end":12,"name":"Static"},"superClass":null,"body":{"type":"ClassBody","start":13,"end":256,"body":[{"type":"MethodDefinition","start":19,"end":37,"static":true,"computed":false,"key":{"type":"Identifier","start":26,"end":32,"name":"method"},"kind":"method","value":{"type":"FunctionExpression","start":32,"end":37,"id":null,"params":[],"generator":false,"expression":false,"async":false,"body":{"type":"BlockStatement","start":35,"end":37,"body":[]}}},{"type":"MethodDefinition","start":42,"end":71,"static":true,"computed":false,"key":{"type":"Identifier","start":55,"end":66,"name":"asyncMethod"},"kind":"method","value":{"type":"FunctionExpression","start":66,"end":71,"id":null,"params":[],"generator":false,"expression":false,"async":true,"body":{"type":"BlockStatement","start":69,"end":71,"body":[]}}},{"type":"MethodDefinition","start":76,"end":115,"static":true,"computed":false,"key":{"type":"Identifier","start":90,"end":110,"name":"asyncGeneratorMethod"},"kind":"method","value":{"type":"FunctionExpression","start":110,"end":115,"id":null,"params":[],"generator":true,"expression":false,"async":true,"body":{"type":"BlockStatement","start":113,"end":115,"body":[]}}},{"type":"MethodDefinition","start":120,"end":148,"static":true,"computed":false,"key":{"type":"Identifier","start":128,"end":143,"name":"generatorMethod"},"kind":"method","value":{"type":"FunctionExpression","start":143,"end":148,"id":null,"params":[],"generator":true,"expression":false,"async":false,"body":{"type":"BlockStatement","start":146,"end":148,"body":[]}}},{"type":"MethodDefinition","start":153,"end":171,"static":true,"computed":false,"key":{"type":"Identifier","start":160,"end":166,"name":"static"},"kind":"method","value":{"type":"FunctionExpression","start":166,"end":171,"id":null,"params":[],"generator":false,"expression":false,"async":false,"body":{"type":"BlockStatement","start":169,"end":171,"body":[]}}},{"type":"MethodDefinition","start":176,"end":200,"static":true,"computed":false,"key":{"type":"Identifier","start":189,"end":195,"name":"static"},"kind":"method","value":{"type":"FunctionExpression","start":195,"end":200,"id":null,"params":[],"generator":false,"expression":false,"async":true,"body":{"type":"BlockStatement","start":198,"end":200,"body":[]}}},{"type":"MethodDefinition","start":205,"end":230,"static":true,"computed":false,"key":{"type":"Identifier","start":219,"end":225,"name":"static"},"kind":"method","value":{"type":"FunctionExpression","start":225,"end":230,"id":null,"params":[],"generator":true,"expression":false,"async":true,"body":{"type":"BlockStatement","start":228,"end":230,"body":[]}}},{"type":"MethodDefinition","start":235,"end":254,"static":true,"computed":false,"key":{"type":"Identifier","start":243,"end":249,"name":"static"},"kind":"method","value":{"type":"FunctionExpression","start":249,"end":254,"id":null,"params":[],"generator":true,"expression":false,"async":false,"body":{"type":"BlockStatement","start":252,"end":254,"body":[]}}}]}}],"sourceType":"script"}"#
    //     );
}
