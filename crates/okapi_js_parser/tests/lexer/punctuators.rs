use okapi_js_parser::TokenKind;

use crate::lexer::{assert_lexer_eq, utils::punctuator};

#[test]
fn punctuators() {
    assert_lexer_eq!(
        r"?. { ( ) [ ] . ... ; , < > <= >= == != === !== + - * % ** ++ -- << >> >>> & | ^ ! ~ && || ?? ? : = += -= *= %= **= <<= >>= >>>= &= |= ^= &&= ||= ??= => / /= }",
        vec![
            punctuator(TokenKind::OptionalChaining, 0, 2, 1, 1),
            punctuator(TokenKind::LeftCurlyBrace, 3, 4, 1, 4),
            punctuator(TokenKind::LeftParenthesis, 5, 6, 1, 6),
            punctuator(TokenKind::RightParenthesis, 7, 8, 1, 8),
            punctuator(TokenKind::LeftSquareBracket, 9, 10, 1, 10),
            punctuator(TokenKind::RightSquareBracket, 11, 12, 1, 12),
            punctuator(TokenKind::Dot, 13, 14, 1, 14),
            punctuator(TokenKind::Ellipsis, 15, 18, 1, 16),
            punctuator(TokenKind::Semicolon, 19, 20, 1, 20),
            punctuator(TokenKind::Comma, 21, 22, 1, 22),
            punctuator(TokenKind::LessThan, 23, 24, 1, 24),
            punctuator(TokenKind::GreaterThan, 25, 26, 1, 26),
            punctuator(TokenKind::LessThanOrEqual, 27, 29, 1, 28),
            punctuator(TokenKind::GreaterThanOrEqual, 30, 32, 1, 31),
            punctuator(TokenKind::Equal, 33, 35, 1, 34),
            punctuator(TokenKind::NotEqual, 36, 38, 1, 37),
            punctuator(TokenKind::StrictEqual, 39, 42, 1, 40),
            punctuator(TokenKind::StrictNotEqual, 43, 46, 1, 44),
            punctuator(TokenKind::Addition, 47, 48, 1, 48),
            punctuator(TokenKind::Subtraction, 49, 50, 1, 50),
            punctuator(TokenKind::Multiplication, 51, 52, 1, 52),
            punctuator(TokenKind::Modulus, 53, 54, 1, 54),
            punctuator(TokenKind::Exponentiation, 55, 57, 1, 56),
            punctuator(TokenKind::Increment, 58, 60, 1, 59),
            punctuator(TokenKind::Decrement, 61, 63, 1, 62),
            punctuator(TokenKind::LeftShift, 64, 66, 1, 65),
            punctuator(TokenKind::RightShift, 67, 69, 1, 68),
            punctuator(TokenKind::UnsignedRightShift, 70, 73, 1, 71),
            punctuator(TokenKind::BitwiseAnd, 74, 75, 1, 75),
            punctuator(TokenKind::BitwiseOr, 76, 77, 1, 77),
            punctuator(TokenKind::BitwiseXor, 78, 79, 1, 79),
            punctuator(TokenKind::LogicalNot, 80, 81, 1, 81),
            punctuator(TokenKind::BitwiseNot, 82, 83, 1, 83),
            punctuator(TokenKind::LogicalAnd, 84, 86, 1, 85),
            punctuator(TokenKind::LogicalOr, 87, 89, 1, 88),
            punctuator(TokenKind::NullishCoalescing, 90, 92, 1, 91),
            punctuator(TokenKind::QuestionMark, 93, 94, 1, 94),
            punctuator(TokenKind::Colon, 95, 96, 1, 96),
            punctuator(TokenKind::Assignment, 97, 98, 1, 98),
            punctuator(TokenKind::AdditionAssignment, 99, 101, 1, 100),
            punctuator(TokenKind::MinusAssignment, 102, 104, 1, 103),
            punctuator(TokenKind::MultiplyAssignment, 105, 107, 1, 106),
            punctuator(TokenKind::ModulusAssignment, 108, 110, 1, 109),
            punctuator(TokenKind::ExponentiationAssignment, 111, 114, 1, 112),
            punctuator(TokenKind::LeftShiftAssignment, 115, 118, 1, 116),
            punctuator(TokenKind::RightShiftAssignment, 119, 122, 1, 120),
            punctuator(TokenKind::UnsignedRightShiftAssignment, 123, 127, 1, 124),
            punctuator(TokenKind::BitwiseAndAssignment, 128, 130, 1, 129),
            punctuator(TokenKind::BitwiseOrAssignment, 131, 133, 1, 132),
            punctuator(TokenKind::BitwiseXorAssignment, 134, 136, 1, 135),
            punctuator(TokenKind::LogicalAndAssignment, 137, 140, 1, 138),
            punctuator(TokenKind::LogicalOrAssignment, 141, 144, 1, 142),
            punctuator(TokenKind::NullishCoalescingAssignment, 145, 148, 1, 146),
            punctuator(TokenKind::ArrowFunction, 149, 151, 1, 150),
            punctuator(TokenKind::Division, 152, 153, 1, 153),
            punctuator(TokenKind::DivisionAssignment, 154, 156, 1, 155),
            punctuator(TokenKind::RightCurlyBrace, 157, 158, 1, 158),
        ]
    );
}
